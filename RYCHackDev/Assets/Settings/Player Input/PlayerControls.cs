//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.6.3
//     from Assets/Settings/Player Input/PlayerControls.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

namespace Deceilio.Psychain
{
    public partial class @PlayerControls: IInputActionCollection2, IDisposable
    {
        public InputActionAsset asset { get; }
        public @PlayerControls()
        {
            asset = InputActionAsset.FromJson(@"{
    ""name"": ""PlayerControls"",
    ""maps"": [
        {
            ""name"": ""Player Movement"",
            ""id"": ""42959503-0376-49f1-8f8b-db65b7753aeb"",
            ""actions"": [
                {
                    ""name"": ""Movement"",
                    ""type"": ""PassThrough"",
                    ""id"": ""8e07a8c1-32a7-421d-b27b-b542a05cd996"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""WASD"",
                    ""id"": ""f4a39c91-5632-4828-b8fc-7f014f3bea14"",
                    ""path"": ""2DVector(mode=2)"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""f496d124-f88b-4ecf-8333-db197b212149"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""d184fc9f-9cd1-4822-8151-52f311ca929e"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""e3ec2473-41a5-4fc8-af0f-0d1a226d0cd6"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""ec12f08b-0473-49ae-bcf2-7cd6c18419ba"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Left Stick [Gamepad]"",
                    ""id"": ""bb15e725-b5f6-4eba-b0dd-b9bf3914c922"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""83fb94a9-7172-4006-b57e-10518b2bfcaa"",
                    ""path"": ""<Gamepad>/leftStick/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""dadbd4e9-3019-4793-883d-9ba54ae1a09e"",
                    ""path"": ""<Gamepad>/leftStick/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""537c8b48-5e38-41e3-87a3-03f122fa6832"",
                    ""path"": ""<Gamepad>/leftStick/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""9d96c50b-0e6c-4da1-b4f1-835058e3b18e"",
                    ""path"": ""<Gamepad>/leftStick/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                }
            ]
        },
        {
            ""name"": ""Player Camera"",
            ""id"": ""a28904f3-459e-40f9-8e01-313425f91018"",
            ""actions"": [
                {
                    ""name"": ""Camera"",
                    ""type"": ""PassThrough"",
                    ""id"": ""46102e91-784b-4318-9db0-e0825bf21add"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""LockOn"",
                    ""type"": ""Button"",
                    ""id"": ""cbd6312f-faaa-4137-9dad-087cec388470"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Lock On Target Left"",
                    ""type"": ""Button"",
                    ""id"": ""ae546548-4afa-451f-a058-630493645866"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Lock On Target Right"",
                    ""type"": ""Button"",
                    ""id"": ""94b815d2-7039-40b7-ae58-9ea5a8e29eb2"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""b9c28377-5304-409f-8cb6-c99b00e0613e"",
                    ""path"": ""<Gamepad>/rightStick"",
                    ""interactions"": """",
                    ""processors"": ""StickDeadzone"",
                    ""groups"": """",
                    ""action"": ""Camera"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""Right Stick [Mouse]"",
                    ""id"": ""35415061-4cc9-4ea2-8eab-0e0b28281297"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Camera"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""2cf91e74-b085-44ee-969c-dbddac573d22"",
                    ""path"": ""<Mouse>/delta/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Camera"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""55bd8bcd-9e3e-4f34-b583-ab2344e80309"",
                    ""path"": ""<Mouse>/delta/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Camera"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""8e0aab1c-d7e5-4600-a0d1-1d54fb2a814e"",
                    ""path"": ""<Mouse>/delta/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Camera"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""04b9bf0b-e2aa-4051-be60-fd6d6a2fedd9"",
                    ""path"": ""<Mouse>/delta/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Camera"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""0af4f2be-e945-4183-a186-c1320d6737bc"",
                    ""path"": ""<Gamepad>/rightStick/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Lock On Target Left"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e7be8c3b-b029-47da-88e8-7a5135e093fe"",
                    ""path"": ""<Keyboard>/1"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Lock On Target Left"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d55fc818-34ed-4e0e-8de8-39b295825064"",
                    ""path"": ""<Gamepad>/rightStick/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Lock On Target Right"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""51b969b7-ca8d-43fb-8be1-6ea8a9f92077"",
                    ""path"": ""<Keyboard>/2"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Lock On Target Right"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c295a2da-c6b7-4aa7-a963-a7af876ca537"",
                    ""path"": ""<Keyboard>/f"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""LockOn"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""9f7e2712-5ece-41c8-841e-34e08b53b9ef"",
                    ""path"": ""<Gamepad>/rightStickPress"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""LockOn"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""Player Actions"",
            ""id"": ""58600f7d-708e-4621-b812-7445e21e26a9"",
            ""actions"": [
                {
                    ""name"": ""Dodge"",
                    ""type"": ""Button"",
                    ""id"": ""4b8681e1-373f-480f-aa6f-086a2451eec3"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Tap"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Sprint"",
                    ""type"": ""PassThrough"",
                    ""id"": ""bf3ca34b-60f7-49d4-8abe-4b64c99ccaac"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Hold"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Jump"",
                    ""type"": ""Button"",
                    ""id"": ""3425f458-1189-4e8b-b381-20e76b170a0e"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Tap X"",
                    ""type"": ""Button"",
                    ""id"": ""3a9cb453-95f0-4a32-bf44-10dce732d5b0"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Tap"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Tap Y"",
                    ""type"": ""Button"",
                    ""id"": ""caf07835-2c44-4454-a8a0-6930678a6066"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Tap"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Hold Y"",
                    ""type"": ""PassThrough"",
                    ""id"": ""3e373916-6d99-492c-8410-f3bc848876b1"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Hold"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Tap RB"",
                    ""type"": ""Button"",
                    ""id"": ""ad1a012a-b4dd-4c92-96e3-bae0a9d86f7d"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Tap"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Tap RT"",
                    ""type"": ""Button"",
                    ""id"": ""6eb17da1-3ba1-480c-b3e2-a4c7d1274a86"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Tap"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Tap LB"",
                    ""type"": ""Button"",
                    ""id"": ""5179b0f6-21a2-4b0b-9f65-2e89c7de21d5"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Tap"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Tap LT"",
                    ""type"": ""Button"",
                    ""id"": ""07289dac-c4bf-419e-973f-7ccaa4e7f622"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Tap"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Hold RB"",
                    ""type"": ""PassThrough"",
                    ""id"": ""8ccd65b4-ade3-41cb-b81e-cabe69eb2754"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Hold"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Hold RT"",
                    ""type"": ""PassThrough"",
                    ""id"": ""648fbc63-173d-440d-b2e8-101eee1894cc"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Hold"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Hold LB"",
                    ""type"": ""PassThrough"",
                    ""id"": ""2c38bf8d-8604-4f50-b40d-f3e16d04e366"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Hold"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Hold LT"",
                    ""type"": ""PassThrough"",
                    ""id"": ""8d23d62f-ece2-4de5-b81c-46840ba0b33c"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Hold"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Qued Tap RB"",
                    ""type"": ""Button"",
                    ""id"": ""02195696-8cb0-41bb-95da-4e2d1ff074b6"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Tap"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Qued Tap RT"",
                    ""type"": ""Button"",
                    ""id"": ""9bdb2680-40ab-4a57-847a-030f82e7d73a"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Tap"",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""ed6a067e-41c1-4834-b653-62d1e7a60ee3"",
                    ""path"": ""<Gamepad>/buttonEast"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Dodge"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""265765fe-6de0-48e0-9059-618681d23d26"",
                    ""path"": ""<Keyboard>/leftShift"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Dodge"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""cd249fda-c8a3-499e-9ab0-4fb00233f929"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Jump"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""077a0e15-53e6-4a22-b32d-2e7ed5236102"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Jump"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""cb8020e7-617c-4a1c-b823-cc3ea09b9a6b"",
                    ""path"": ""<Gamepad>/leftStickPress"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Sprint"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""472da052-6c4f-4440-babe-3ba6ee4a6374"",
                    ""path"": ""<Keyboard>/leftShift"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Sprint"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b4e7c57d-19bb-47d4-ac8e-3ea74989e24c"",
                    ""path"": ""<Keyboard>/x"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Tap X"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b740c9ac-17ae-43d1-a418-0e84e37d0880"",
                    ""path"": ""<Gamepad>/buttonWest"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Tap X"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""8d5edebd-0321-4bac-997a-857036817f98"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": ""Tap"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Tap RB"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""4cb24f5f-6e57-4b0f-b9ec-47a48e27f38b"",
                    ""path"": ""<Gamepad>/rightShoulder"",
                    ""interactions"": ""Tap"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Tap RB"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""89bef8cf-0c4f-4662-8780-8dccc57fb42d"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Tap RT"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b8de0808-5136-4d81-9181-7d39dfda67e1"",
                    ""path"": ""<Gamepad>/rightTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Tap RT"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""08bf5975-30b6-45b5-bbbf-315d911cd220"",
                    ""path"": ""<Gamepad>/leftShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Tap LB"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c33e0042-a56e-4e9f-bc55-b3e28b35d20e"",
                    ""path"": ""<Keyboard>/q"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Tap LB"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""2caf0f89-81f9-4990-a7e9-20a344b998b0"",
                    ""path"": ""<Gamepad>/leftTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Tap LT"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""25a2584a-a7f8-4ab6-856f-022626467bb4"",
                    ""path"": ""<Keyboard>/tab"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Tap LT"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""2fe8508b-975d-45e5-9ea1-6f2f9b1c3657"",
                    ""path"": ""<Keyboard>/r"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Hold RB"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""4575cd38-fff6-451b-be1f-aee0a0b55f56"",
                    ""path"": ""<Gamepad>/rightShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Hold RB"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""11191409-8f93-4dcd-89d3-0d35ddda7463"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Hold RT"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""1cb35d00-52f2-47c4-a285-f31e6c5b4543"",
                    ""path"": ""<Gamepad>/rightTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Hold RT"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""cfa4cb23-1c5a-4f5d-8e04-b201d26c3179"",
                    ""path"": ""<Gamepad>/leftShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Hold LB"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""601ae435-fb11-4464-9f1e-b1d4c557ac8f"",
                    ""path"": ""<Keyboard>/q"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Hold LB"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""7cb6aed5-21d4-4be2-8ea8-60a4c1a04348"",
                    ""path"": ""<Gamepad>/leftTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Hold LT"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b6514d5a-cf23-4af1-a90c-ece8d919d8c1"",
                    ""path"": ""<Keyboard>/y"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Hold Y"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""Y&RB"",
                    ""id"": ""cd44792d-c162-4fcc-9088-35fec13983e7"",
                    ""path"": ""TwoModifiers"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Hold Y"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""modifier1"",
                    ""id"": ""cdfa5375-30f1-43ad-848f-81aa0fdd3263"",
                    ""path"": ""<XInputController>/buttonNorth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Hold Y"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""modifier2"",
                    ""id"": ""843c7593-847d-4fec-b115-5815ca4296f4"",
                    ""path"": ""<Gamepad>/rightShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Hold Y"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""binding"",
                    ""id"": ""de15c01f-8e3f-43ff-9804-dc42d6cb0eab"",
                    ""path"": ""<Gamepad>/buttonNorth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Hold Y"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Y&RT"",
                    ""id"": ""cf252784-cab8-49bc-9fd8-18621873e73b"",
                    ""path"": ""TwoModifiers"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Hold Y"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""modifier1"",
                    ""id"": ""9f7cb9ce-bf82-4a06-b048-06bab78d442a"",
                    ""path"": ""<XInputController>/buttonNorth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Hold Y"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""modifier2"",
                    ""id"": ""d7febfcf-6f7c-4916-9cc0-d7867301ad28"",
                    ""path"": ""<Gamepad>/rightTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Hold Y"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""binding"",
                    ""id"": ""76e574f7-75b2-4706-bcce-f864dfaba6fb"",
                    ""path"": ""<Gamepad>/buttonNorth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Hold Y"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""c62fd7a0-b409-46d4-a57c-7e091b82cb53"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Tap Y"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d9b602b6-216e-40d2-a4ed-32482f31d1a6"",
                    ""path"": ""<Gamepad>/buttonNorth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Tap Y"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""fb0c7ee5-f195-4b14-8281-c6071a07d6c0"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": ""Tap"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Qued Tap RB"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""66034e88-37f2-4147-ace3-2c3553837f0f"",
                    ""path"": ""<Gamepad>/rightShoulder"",
                    ""interactions"": ""Tap"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Qued Tap RB"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""0306382c-2dda-44fc-b030-da132ff3157a"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Qued Tap RT"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""61c49557-5e5f-4267-a68c-e8c593f2f10e"",
                    ""path"": ""<Gamepad>/rightTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Qued Tap RT"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""Player UI"",
            ""id"": ""33d7c8e3-62ce-464a-bfc2-878d14880dee"",
            ""actions"": [
                {
                    ""name"": ""Inventory"",
                    ""type"": ""Button"",
                    ""id"": ""3c8160d3-b266-42fc-b13c-3622bd68cd68"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""D-Pad Right"",
                    ""type"": ""Button"",
                    ""id"": ""13bc543e-e3a9-43d1-977f-a7032487d81e"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""D-Pad Left"",
                    ""type"": ""Button"",
                    ""id"": ""37fc530f-3fa9-498a-8828-b8bc34dabd64"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""D-Pad Down"",
                    ""type"": ""Button"",
                    ""id"": ""0874c377-0a0d-4705-bb8a-e9a2aab4daa0"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""D-Pad Up"",
                    ""type"": ""Button"",
                    ""id"": ""c2664c1a-f254-4f32-a443-da6b9632dbfa"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""X"",
                    ""type"": ""Button"",
                    ""id"": ""6e1787c0-9e9c-4a59-92df-e8d55d0f6ff8"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Tap"",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""361db8cf-32a0-405e-b37f-9b9e96da6463"",
                    ""path"": ""<Keyboard>/upArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""D-Pad Up"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""2dc449e0-c980-463e-9c10-434937b7a5cd"",
                    ""path"": ""<Gamepad>/dpad/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""D-Pad Up"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c63aeb5f-1f91-4802-afe4-a4be5d81f6c2"",
                    ""path"": ""<Keyboard>/downArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""D-Pad Down"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""621630e3-bfd0-40a7-b833-0d876e73d3b5"",
                    ""path"": ""<Gamepad>/dpad/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""D-Pad Down"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""1d259d08-af26-47ef-b7b6-c522eb5e0cd5"",
                    ""path"": ""<Keyboard>/leftArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""D-Pad Left"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""743cd62e-a518-45f4-8781-d9d974c4940d"",
                    ""path"": ""<Gamepad>/dpad/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""D-Pad Left"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""4ce9a0fa-7ee7-4174-95a5-f83a5bbb62a9"",
                    ""path"": ""<Keyboard>/rightArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""D-Pad Right"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ae31beab-0e03-4bb1-bf94-66ec9889fd8c"",
                    ""path"": ""<Gamepad>/dpad/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""D-Pad Right"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""0de65aa0-262d-4a93-9def-4277f4d8a71c"",
                    ""path"": ""<Gamepad>/start"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Inventory"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""7c284452-9cec-4983-bf5b-188d611d08e9"",
                    ""path"": ""<Keyboard>/escape"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Inventory"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""42c3a064-ea07-450c-98d2-032e8f46d29c"",
                    ""path"": ""<Gamepad>/buttonWest"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""X"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""fbb784c2-d3d1-4ef9-be74-c3145c010b95"",
                    ""path"": ""<Keyboard>/x"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""X"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
            // Player Movement
            m_PlayerMovement = asset.FindActionMap("Player Movement", throwIfNotFound: true);
            m_PlayerMovement_Movement = m_PlayerMovement.FindAction("Movement", throwIfNotFound: true);
            // Player Camera
            m_PlayerCamera = asset.FindActionMap("Player Camera", throwIfNotFound: true);
            m_PlayerCamera_Camera = m_PlayerCamera.FindAction("Camera", throwIfNotFound: true);
            m_PlayerCamera_LockOn = m_PlayerCamera.FindAction("LockOn", throwIfNotFound: true);
            m_PlayerCamera_LockOnTargetLeft = m_PlayerCamera.FindAction("Lock On Target Left", throwIfNotFound: true);
            m_PlayerCamera_LockOnTargetRight = m_PlayerCamera.FindAction("Lock On Target Right", throwIfNotFound: true);
            // Player Actions
            m_PlayerActions = asset.FindActionMap("Player Actions", throwIfNotFound: true);
            m_PlayerActions_Dodge = m_PlayerActions.FindAction("Dodge", throwIfNotFound: true);
            m_PlayerActions_Sprint = m_PlayerActions.FindAction("Sprint", throwIfNotFound: true);
            m_PlayerActions_Jump = m_PlayerActions.FindAction("Jump", throwIfNotFound: true);
            m_PlayerActions_TapX = m_PlayerActions.FindAction("Tap X", throwIfNotFound: true);
            m_PlayerActions_TapY = m_PlayerActions.FindAction("Tap Y", throwIfNotFound: true);
            m_PlayerActions_HoldY = m_PlayerActions.FindAction("Hold Y", throwIfNotFound: true);
            m_PlayerActions_TapRB = m_PlayerActions.FindAction("Tap RB", throwIfNotFound: true);
            m_PlayerActions_TapRT = m_PlayerActions.FindAction("Tap RT", throwIfNotFound: true);
            m_PlayerActions_TapLB = m_PlayerActions.FindAction("Tap LB", throwIfNotFound: true);
            m_PlayerActions_TapLT = m_PlayerActions.FindAction("Tap LT", throwIfNotFound: true);
            m_PlayerActions_HoldRB = m_PlayerActions.FindAction("Hold RB", throwIfNotFound: true);
            m_PlayerActions_HoldRT = m_PlayerActions.FindAction("Hold RT", throwIfNotFound: true);
            m_PlayerActions_HoldLB = m_PlayerActions.FindAction("Hold LB", throwIfNotFound: true);
            m_PlayerActions_HoldLT = m_PlayerActions.FindAction("Hold LT", throwIfNotFound: true);
            m_PlayerActions_QuedTapRB = m_PlayerActions.FindAction("Qued Tap RB", throwIfNotFound: true);
            m_PlayerActions_QuedTapRT = m_PlayerActions.FindAction("Qued Tap RT", throwIfNotFound: true);
            // Player UI
            m_PlayerUI = asset.FindActionMap("Player UI", throwIfNotFound: true);
            m_PlayerUI_Inventory = m_PlayerUI.FindAction("Inventory", throwIfNotFound: true);
            m_PlayerUI_DPadRight = m_PlayerUI.FindAction("D-Pad Right", throwIfNotFound: true);
            m_PlayerUI_DPadLeft = m_PlayerUI.FindAction("D-Pad Left", throwIfNotFound: true);
            m_PlayerUI_DPadDown = m_PlayerUI.FindAction("D-Pad Down", throwIfNotFound: true);
            m_PlayerUI_DPadUp = m_PlayerUI.FindAction("D-Pad Up", throwIfNotFound: true);
            m_PlayerUI_X = m_PlayerUI.FindAction("X", throwIfNotFound: true);
        }

        public void Dispose()
        {
            UnityEngine.Object.Destroy(asset);
        }

        public InputBinding? bindingMask
        {
            get => asset.bindingMask;
            set => asset.bindingMask = value;
        }

        public ReadOnlyArray<InputDevice>? devices
        {
            get => asset.devices;
            set => asset.devices = value;
        }

        public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

        public bool Contains(InputAction action)
        {
            return asset.Contains(action);
        }

        public IEnumerator<InputAction> GetEnumerator()
        {
            return asset.GetEnumerator();
        }

        IEnumerator IEnumerable.GetEnumerator()
        {
            return GetEnumerator();
        }

        public void Enable()
        {
            asset.Enable();
        }

        public void Disable()
        {
            asset.Disable();
        }

        public IEnumerable<InputBinding> bindings => asset.bindings;

        public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
        {
            return asset.FindAction(actionNameOrId, throwIfNotFound);
        }

        public int FindBinding(InputBinding bindingMask, out InputAction action)
        {
            return asset.FindBinding(bindingMask, out action);
        }

        // Player Movement
        private readonly InputActionMap m_PlayerMovement;
        private List<IPlayerMovementActions> m_PlayerMovementActionsCallbackInterfaces = new List<IPlayerMovementActions>();
        private readonly InputAction m_PlayerMovement_Movement;
        public struct PlayerMovementActions
        {
            private @PlayerControls m_Wrapper;
            public PlayerMovementActions(@PlayerControls wrapper) { m_Wrapper = wrapper; }
            public InputAction @Movement => m_Wrapper.m_PlayerMovement_Movement;
            public InputActionMap Get() { return m_Wrapper.m_PlayerMovement; }
            public void Enable() { Get().Enable(); }
            public void Disable() { Get().Disable(); }
            public bool enabled => Get().enabled;
            public static implicit operator InputActionMap(PlayerMovementActions set) { return set.Get(); }
            public void AddCallbacks(IPlayerMovementActions instance)
            {
                if (instance == null || m_Wrapper.m_PlayerMovementActionsCallbackInterfaces.Contains(instance)) return;
                m_Wrapper.m_PlayerMovementActionsCallbackInterfaces.Add(instance);
                @Movement.started += instance.OnMovement;
                @Movement.performed += instance.OnMovement;
                @Movement.canceled += instance.OnMovement;
            }

            private void UnregisterCallbacks(IPlayerMovementActions instance)
            {
                @Movement.started -= instance.OnMovement;
                @Movement.performed -= instance.OnMovement;
                @Movement.canceled -= instance.OnMovement;
            }

            public void RemoveCallbacks(IPlayerMovementActions instance)
            {
                if (m_Wrapper.m_PlayerMovementActionsCallbackInterfaces.Remove(instance))
                    UnregisterCallbacks(instance);
            }

            public void SetCallbacks(IPlayerMovementActions instance)
            {
                foreach (var item in m_Wrapper.m_PlayerMovementActionsCallbackInterfaces)
                    UnregisterCallbacks(item);
                m_Wrapper.m_PlayerMovementActionsCallbackInterfaces.Clear();
                AddCallbacks(instance);
            }
        }
        public PlayerMovementActions @PlayerMovement => new PlayerMovementActions(this);

        // Player Camera
        private readonly InputActionMap m_PlayerCamera;
        private List<IPlayerCameraActions> m_PlayerCameraActionsCallbackInterfaces = new List<IPlayerCameraActions>();
        private readonly InputAction m_PlayerCamera_Camera;
        private readonly InputAction m_PlayerCamera_LockOn;
        private readonly InputAction m_PlayerCamera_LockOnTargetLeft;
        private readonly InputAction m_PlayerCamera_LockOnTargetRight;
        public struct PlayerCameraActions
        {
            private @PlayerControls m_Wrapper;
            public PlayerCameraActions(@PlayerControls wrapper) { m_Wrapper = wrapper; }
            public InputAction @Camera => m_Wrapper.m_PlayerCamera_Camera;
            public InputAction @LockOn => m_Wrapper.m_PlayerCamera_LockOn;
            public InputAction @LockOnTargetLeft => m_Wrapper.m_PlayerCamera_LockOnTargetLeft;
            public InputAction @LockOnTargetRight => m_Wrapper.m_PlayerCamera_LockOnTargetRight;
            public InputActionMap Get() { return m_Wrapper.m_PlayerCamera; }
            public void Enable() { Get().Enable(); }
            public void Disable() { Get().Disable(); }
            public bool enabled => Get().enabled;
            public static implicit operator InputActionMap(PlayerCameraActions set) { return set.Get(); }
            public void AddCallbacks(IPlayerCameraActions instance)
            {
                if (instance == null || m_Wrapper.m_PlayerCameraActionsCallbackInterfaces.Contains(instance)) return;
                m_Wrapper.m_PlayerCameraActionsCallbackInterfaces.Add(instance);
                @Camera.started += instance.OnCamera;
                @Camera.performed += instance.OnCamera;
                @Camera.canceled += instance.OnCamera;
                @LockOn.started += instance.OnLockOn;
                @LockOn.performed += instance.OnLockOn;
                @LockOn.canceled += instance.OnLockOn;
                @LockOnTargetLeft.started += instance.OnLockOnTargetLeft;
                @LockOnTargetLeft.performed += instance.OnLockOnTargetLeft;
                @LockOnTargetLeft.canceled += instance.OnLockOnTargetLeft;
                @LockOnTargetRight.started += instance.OnLockOnTargetRight;
                @LockOnTargetRight.performed += instance.OnLockOnTargetRight;
                @LockOnTargetRight.canceled += instance.OnLockOnTargetRight;
            }

            private void UnregisterCallbacks(IPlayerCameraActions instance)
            {
                @Camera.started -= instance.OnCamera;
                @Camera.performed -= instance.OnCamera;
                @Camera.canceled -= instance.OnCamera;
                @LockOn.started -= instance.OnLockOn;
                @LockOn.performed -= instance.OnLockOn;
                @LockOn.canceled -= instance.OnLockOn;
                @LockOnTargetLeft.started -= instance.OnLockOnTargetLeft;
                @LockOnTargetLeft.performed -= instance.OnLockOnTargetLeft;
                @LockOnTargetLeft.canceled -= instance.OnLockOnTargetLeft;
                @LockOnTargetRight.started -= instance.OnLockOnTargetRight;
                @LockOnTargetRight.performed -= instance.OnLockOnTargetRight;
                @LockOnTargetRight.canceled -= instance.OnLockOnTargetRight;
            }

            public void RemoveCallbacks(IPlayerCameraActions instance)
            {
                if (m_Wrapper.m_PlayerCameraActionsCallbackInterfaces.Remove(instance))
                    UnregisterCallbacks(instance);
            }

            public void SetCallbacks(IPlayerCameraActions instance)
            {
                foreach (var item in m_Wrapper.m_PlayerCameraActionsCallbackInterfaces)
                    UnregisterCallbacks(item);
                m_Wrapper.m_PlayerCameraActionsCallbackInterfaces.Clear();
                AddCallbacks(instance);
            }
        }
        public PlayerCameraActions @PlayerCamera => new PlayerCameraActions(this);

        // Player Actions
        private readonly InputActionMap m_PlayerActions;
        private List<IPlayerActionsActions> m_PlayerActionsActionsCallbackInterfaces = new List<IPlayerActionsActions>();
        private readonly InputAction m_PlayerActions_Dodge;
        private readonly InputAction m_PlayerActions_Sprint;
        private readonly InputAction m_PlayerActions_Jump;
        private readonly InputAction m_PlayerActions_TapX;
        private readonly InputAction m_PlayerActions_TapY;
        private readonly InputAction m_PlayerActions_HoldY;
        private readonly InputAction m_PlayerActions_TapRB;
        private readonly InputAction m_PlayerActions_TapRT;
        private readonly InputAction m_PlayerActions_TapLB;
        private readonly InputAction m_PlayerActions_TapLT;
        private readonly InputAction m_PlayerActions_HoldRB;
        private readonly InputAction m_PlayerActions_HoldRT;
        private readonly InputAction m_PlayerActions_HoldLB;
        private readonly InputAction m_PlayerActions_HoldLT;
        private readonly InputAction m_PlayerActions_QuedTapRB;
        private readonly InputAction m_PlayerActions_QuedTapRT;
        public struct PlayerActionsActions
        {
            private @PlayerControls m_Wrapper;
            public PlayerActionsActions(@PlayerControls wrapper) { m_Wrapper = wrapper; }
            public InputAction @Dodge => m_Wrapper.m_PlayerActions_Dodge;
            public InputAction @Sprint => m_Wrapper.m_PlayerActions_Sprint;
            public InputAction @Jump => m_Wrapper.m_PlayerActions_Jump;
            public InputAction @TapX => m_Wrapper.m_PlayerActions_TapX;
            public InputAction @TapY => m_Wrapper.m_PlayerActions_TapY;
            public InputAction @HoldY => m_Wrapper.m_PlayerActions_HoldY;
            public InputAction @TapRB => m_Wrapper.m_PlayerActions_TapRB;
            public InputAction @TapRT => m_Wrapper.m_PlayerActions_TapRT;
            public InputAction @TapLB => m_Wrapper.m_PlayerActions_TapLB;
            public InputAction @TapLT => m_Wrapper.m_PlayerActions_TapLT;
            public InputAction @HoldRB => m_Wrapper.m_PlayerActions_HoldRB;
            public InputAction @HoldRT => m_Wrapper.m_PlayerActions_HoldRT;
            public InputAction @HoldLB => m_Wrapper.m_PlayerActions_HoldLB;
            public InputAction @HoldLT => m_Wrapper.m_PlayerActions_HoldLT;
            public InputAction @QuedTapRB => m_Wrapper.m_PlayerActions_QuedTapRB;
            public InputAction @QuedTapRT => m_Wrapper.m_PlayerActions_QuedTapRT;
            public InputActionMap Get() { return m_Wrapper.m_PlayerActions; }
            public void Enable() { Get().Enable(); }
            public void Disable() { Get().Disable(); }
            public bool enabled => Get().enabled;
            public static implicit operator InputActionMap(PlayerActionsActions set) { return set.Get(); }
            public void AddCallbacks(IPlayerActionsActions instance)
            {
                if (instance == null || m_Wrapper.m_PlayerActionsActionsCallbackInterfaces.Contains(instance)) return;
                m_Wrapper.m_PlayerActionsActionsCallbackInterfaces.Add(instance);
                @Dodge.started += instance.OnDodge;
                @Dodge.performed += instance.OnDodge;
                @Dodge.canceled += instance.OnDodge;
                @Sprint.started += instance.OnSprint;
                @Sprint.performed += instance.OnSprint;
                @Sprint.canceled += instance.OnSprint;
                @Jump.started += instance.OnJump;
                @Jump.performed += instance.OnJump;
                @Jump.canceled += instance.OnJump;
                @TapX.started += instance.OnTapX;
                @TapX.performed += instance.OnTapX;
                @TapX.canceled += instance.OnTapX;
                @TapY.started += instance.OnTapY;
                @TapY.performed += instance.OnTapY;
                @TapY.canceled += instance.OnTapY;
                @HoldY.started += instance.OnHoldY;
                @HoldY.performed += instance.OnHoldY;
                @HoldY.canceled += instance.OnHoldY;
                @TapRB.started += instance.OnTapRB;
                @TapRB.performed += instance.OnTapRB;
                @TapRB.canceled += instance.OnTapRB;
                @TapRT.started += instance.OnTapRT;
                @TapRT.performed += instance.OnTapRT;
                @TapRT.canceled += instance.OnTapRT;
                @TapLB.started += instance.OnTapLB;
                @TapLB.performed += instance.OnTapLB;
                @TapLB.canceled += instance.OnTapLB;
                @TapLT.started += instance.OnTapLT;
                @TapLT.performed += instance.OnTapLT;
                @TapLT.canceled += instance.OnTapLT;
                @HoldRB.started += instance.OnHoldRB;
                @HoldRB.performed += instance.OnHoldRB;
                @HoldRB.canceled += instance.OnHoldRB;
                @HoldRT.started += instance.OnHoldRT;
                @HoldRT.performed += instance.OnHoldRT;
                @HoldRT.canceled += instance.OnHoldRT;
                @HoldLB.started += instance.OnHoldLB;
                @HoldLB.performed += instance.OnHoldLB;
                @HoldLB.canceled += instance.OnHoldLB;
                @HoldLT.started += instance.OnHoldLT;
                @HoldLT.performed += instance.OnHoldLT;
                @HoldLT.canceled += instance.OnHoldLT;
                @QuedTapRB.started += instance.OnQuedTapRB;
                @QuedTapRB.performed += instance.OnQuedTapRB;
                @QuedTapRB.canceled += instance.OnQuedTapRB;
                @QuedTapRT.started += instance.OnQuedTapRT;
                @QuedTapRT.performed += instance.OnQuedTapRT;
                @QuedTapRT.canceled += instance.OnQuedTapRT;
            }

            private void UnregisterCallbacks(IPlayerActionsActions instance)
            {
                @Dodge.started -= instance.OnDodge;
                @Dodge.performed -= instance.OnDodge;
                @Dodge.canceled -= instance.OnDodge;
                @Sprint.started -= instance.OnSprint;
                @Sprint.performed -= instance.OnSprint;
                @Sprint.canceled -= instance.OnSprint;
                @Jump.started -= instance.OnJump;
                @Jump.performed -= instance.OnJump;
                @Jump.canceled -= instance.OnJump;
                @TapX.started -= instance.OnTapX;
                @TapX.performed -= instance.OnTapX;
                @TapX.canceled -= instance.OnTapX;
                @TapY.started -= instance.OnTapY;
                @TapY.performed -= instance.OnTapY;
                @TapY.canceled -= instance.OnTapY;
                @HoldY.started -= instance.OnHoldY;
                @HoldY.performed -= instance.OnHoldY;
                @HoldY.canceled -= instance.OnHoldY;
                @TapRB.started -= instance.OnTapRB;
                @TapRB.performed -= instance.OnTapRB;
                @TapRB.canceled -= instance.OnTapRB;
                @TapRT.started -= instance.OnTapRT;
                @TapRT.performed -= instance.OnTapRT;
                @TapRT.canceled -= instance.OnTapRT;
                @TapLB.started -= instance.OnTapLB;
                @TapLB.performed -= instance.OnTapLB;
                @TapLB.canceled -= instance.OnTapLB;
                @TapLT.started -= instance.OnTapLT;
                @TapLT.performed -= instance.OnTapLT;
                @TapLT.canceled -= instance.OnTapLT;
                @HoldRB.started -= instance.OnHoldRB;
                @HoldRB.performed -= instance.OnHoldRB;
                @HoldRB.canceled -= instance.OnHoldRB;
                @HoldRT.started -= instance.OnHoldRT;
                @HoldRT.performed -= instance.OnHoldRT;
                @HoldRT.canceled -= instance.OnHoldRT;
                @HoldLB.started -= instance.OnHoldLB;
                @HoldLB.performed -= instance.OnHoldLB;
                @HoldLB.canceled -= instance.OnHoldLB;
                @HoldLT.started -= instance.OnHoldLT;
                @HoldLT.performed -= instance.OnHoldLT;
                @HoldLT.canceled -= instance.OnHoldLT;
                @QuedTapRB.started -= instance.OnQuedTapRB;
                @QuedTapRB.performed -= instance.OnQuedTapRB;
                @QuedTapRB.canceled -= instance.OnQuedTapRB;
                @QuedTapRT.started -= instance.OnQuedTapRT;
                @QuedTapRT.performed -= instance.OnQuedTapRT;
                @QuedTapRT.canceled -= instance.OnQuedTapRT;
            }

            public void RemoveCallbacks(IPlayerActionsActions instance)
            {
                if (m_Wrapper.m_PlayerActionsActionsCallbackInterfaces.Remove(instance))
                    UnregisterCallbacks(instance);
            }

            public void SetCallbacks(IPlayerActionsActions instance)
            {
                foreach (var item in m_Wrapper.m_PlayerActionsActionsCallbackInterfaces)
                    UnregisterCallbacks(item);
                m_Wrapper.m_PlayerActionsActionsCallbackInterfaces.Clear();
                AddCallbacks(instance);
            }
        }
        public PlayerActionsActions @PlayerActions => new PlayerActionsActions(this);

        // Player UI
        private readonly InputActionMap m_PlayerUI;
        private List<IPlayerUIActions> m_PlayerUIActionsCallbackInterfaces = new List<IPlayerUIActions>();
        private readonly InputAction m_PlayerUI_Inventory;
        private readonly InputAction m_PlayerUI_DPadRight;
        private readonly InputAction m_PlayerUI_DPadLeft;
        private readonly InputAction m_PlayerUI_DPadDown;
        private readonly InputAction m_PlayerUI_DPadUp;
        private readonly InputAction m_PlayerUI_X;
        public struct PlayerUIActions
        {
            private @PlayerControls m_Wrapper;
            public PlayerUIActions(@PlayerControls wrapper) { m_Wrapper = wrapper; }
            public InputAction @Inventory => m_Wrapper.m_PlayerUI_Inventory;
            public InputAction @DPadRight => m_Wrapper.m_PlayerUI_DPadRight;
            public InputAction @DPadLeft => m_Wrapper.m_PlayerUI_DPadLeft;
            public InputAction @DPadDown => m_Wrapper.m_PlayerUI_DPadDown;
            public InputAction @DPadUp => m_Wrapper.m_PlayerUI_DPadUp;
            public InputAction @X => m_Wrapper.m_PlayerUI_X;
            public InputActionMap Get() { return m_Wrapper.m_PlayerUI; }
            public void Enable() { Get().Enable(); }
            public void Disable() { Get().Disable(); }
            public bool enabled => Get().enabled;
            public static implicit operator InputActionMap(PlayerUIActions set) { return set.Get(); }
            public void AddCallbacks(IPlayerUIActions instance)
            {
                if (instance == null || m_Wrapper.m_PlayerUIActionsCallbackInterfaces.Contains(instance)) return;
                m_Wrapper.m_PlayerUIActionsCallbackInterfaces.Add(instance);
                @Inventory.started += instance.OnInventory;
                @Inventory.performed += instance.OnInventory;
                @Inventory.canceled += instance.OnInventory;
                @DPadRight.started += instance.OnDPadRight;
                @DPadRight.performed += instance.OnDPadRight;
                @DPadRight.canceled += instance.OnDPadRight;
                @DPadLeft.started += instance.OnDPadLeft;
                @DPadLeft.performed += instance.OnDPadLeft;
                @DPadLeft.canceled += instance.OnDPadLeft;
                @DPadDown.started += instance.OnDPadDown;
                @DPadDown.performed += instance.OnDPadDown;
                @DPadDown.canceled += instance.OnDPadDown;
                @DPadUp.started += instance.OnDPadUp;
                @DPadUp.performed += instance.OnDPadUp;
                @DPadUp.canceled += instance.OnDPadUp;
                @X.started += instance.OnX;
                @X.performed += instance.OnX;
                @X.canceled += instance.OnX;
            }

            private void UnregisterCallbacks(IPlayerUIActions instance)
            {
                @Inventory.started -= instance.OnInventory;
                @Inventory.performed -= instance.OnInventory;
                @Inventory.canceled -= instance.OnInventory;
                @DPadRight.started -= instance.OnDPadRight;
                @DPadRight.performed -= instance.OnDPadRight;
                @DPadRight.canceled -= instance.OnDPadRight;
                @DPadLeft.started -= instance.OnDPadLeft;
                @DPadLeft.performed -= instance.OnDPadLeft;
                @DPadLeft.canceled -= instance.OnDPadLeft;
                @DPadDown.started -= instance.OnDPadDown;
                @DPadDown.performed -= instance.OnDPadDown;
                @DPadDown.canceled -= instance.OnDPadDown;
                @DPadUp.started -= instance.OnDPadUp;
                @DPadUp.performed -= instance.OnDPadUp;
                @DPadUp.canceled -= instance.OnDPadUp;
                @X.started -= instance.OnX;
                @X.performed -= instance.OnX;
                @X.canceled -= instance.OnX;
            }

            public void RemoveCallbacks(IPlayerUIActions instance)
            {
                if (m_Wrapper.m_PlayerUIActionsCallbackInterfaces.Remove(instance))
                    UnregisterCallbacks(instance);
            }

            public void SetCallbacks(IPlayerUIActions instance)
            {
                foreach (var item in m_Wrapper.m_PlayerUIActionsCallbackInterfaces)
                    UnregisterCallbacks(item);
                m_Wrapper.m_PlayerUIActionsCallbackInterfaces.Clear();
                AddCallbacks(instance);
            }
        }
        public PlayerUIActions @PlayerUI => new PlayerUIActions(this);
        public interface IPlayerMovementActions
        {
            void OnMovement(InputAction.CallbackContext context);
        }
        public interface IPlayerCameraActions
        {
            void OnCamera(InputAction.CallbackContext context);
            void OnLockOn(InputAction.CallbackContext context);
            void OnLockOnTargetLeft(InputAction.CallbackContext context);
            void OnLockOnTargetRight(InputAction.CallbackContext context);
        }
        public interface IPlayerActionsActions
        {
            void OnDodge(InputAction.CallbackContext context);
            void OnSprint(InputAction.CallbackContext context);
            void OnJump(InputAction.CallbackContext context);
            void OnTapX(InputAction.CallbackContext context);
            void OnTapY(InputAction.CallbackContext context);
            void OnHoldY(InputAction.CallbackContext context);
            void OnTapRB(InputAction.CallbackContext context);
            void OnTapRT(InputAction.CallbackContext context);
            void OnTapLB(InputAction.CallbackContext context);
            void OnTapLT(InputAction.CallbackContext context);
            void OnHoldRB(InputAction.CallbackContext context);
            void OnHoldRT(InputAction.CallbackContext context);
            void OnHoldLB(InputAction.CallbackContext context);
            void OnHoldLT(InputAction.CallbackContext context);
            void OnQuedTapRB(InputAction.CallbackContext context);
            void OnQuedTapRT(InputAction.CallbackContext context);
        }
        public interface IPlayerUIActions
        {
            void OnInventory(InputAction.CallbackContext context);
            void OnDPadRight(InputAction.CallbackContext context);
            void OnDPadLeft(InputAction.CallbackContext context);
            void OnDPadDown(InputAction.CallbackContext context);
            void OnDPadUp(InputAction.CallbackContext context);
            void OnX(InputAction.CallbackContext context);
        }
    }
}
